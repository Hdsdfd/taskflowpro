# Generated by Django 5.2.1 on 2025-09-03 07:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="APIToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="令牌名称")),
                (
                    "key",
                    models.CharField(
                        max_length=64, unique=True, verbose_name="令牌密钥"
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(default=list, verbose_name="权限列表"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否启用"),
                ),
                (
                    "rate_limit",
                    models.IntegerField(default=1000, verbose_name="速率限制(次/小时)"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="过期时间"
                    ),
                ),
                (
                    "last_used_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="最后使用时间"
                    ),
                ),
                (
                    "usage_count",
                    models.IntegerField(default=0, verbose_name="使用次数"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_tokens",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "API令牌",
                "verbose_name_plural": "API令牌",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MobileDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("ios", "iOS"),
                            ("android", "Android"),
                            ("web", "Web"),
                            ("desktop", "Desktop"),
                            ("other", "其他"),
                        ],
                        max_length=20,
                        verbose_name="设备类型",
                    ),
                ),
                (
                    "device_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="设备ID"
                    ),
                ),
                (
                    "device_name",
                    models.CharField(max_length=200, verbose_name="设备名称"),
                ),
                (
                    "device_model",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="设备型号"
                    ),
                ),
                (
                    "os_version",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="操作系统版本"
                    ),
                ),
                (
                    "app_version",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="应用版本"
                    ),
                ),
                (
                    "push_token",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="推送令牌"
                    ),
                ),
                (
                    "push_enabled",
                    models.BooleanField(default=True, verbose_name="启用推送"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "last_seen",
                    models.DateTimeField(auto_now=True, verbose_name="最后活跃时间"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mobile_devices",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "移动设备",
                "verbose_name_plural": "移动设备",
                "ordering": ["-last_seen"],
                "unique_together": {("user", "device_id")},
            },
        ),
        migrations.CreateModel(
            name="OfflineSync",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("upload", "上传"),
                            ("download", "下载"),
                            ("bidirectional", "双向"),
                        ],
                        max_length=20,
                        verbose_name="同步类型",
                    ),
                ),
                ("data_scope", models.JSONField(default=list, verbose_name="数据范围")),
                (
                    "last_sync_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="最后同步时间"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "等待中"),
                            ("in_progress", "进行中"),
                            ("completed", "已完成"),
                            ("failed", "失败"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="同步状态",
                    ),
                ),
                (
                    "total_items",
                    models.IntegerField(default=0, verbose_name="总项目数"),
                ),
                (
                    "synced_items",
                    models.IntegerField(default=0, verbose_name="已同步项目数"),
                ),
                (
                    "failed_items",
                    models.IntegerField(default=0, verbose_name="失败项目数"),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="错误信息"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offline_syncs",
                        to="api.mobiledevice",
                        verbose_name="设备",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offline_syncs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "离线同步",
                "verbose_name_plural": "离线同步",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PushNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="通知标题")),
                ("message", models.TextField(verbose_name="通知内容")),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("task_assigned", "任务分配"),
                            ("task_due", "任务到期"),
                            ("project_update", "项目更新"),
                            ("comment_added", "新增评论"),
                            ("meeting_reminder", "会议提醒"),
                            ("system_alert", "系统提醒"),
                        ],
                        max_length=30,
                        verbose_name="通知类型",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "低"),
                            ("normal", "普通"),
                            ("high", "高"),
                            ("urgent", "紧急"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="优先级",
                    ),
                ),
                (
                    "send_immediately",
                    models.BooleanField(default=True, verbose_name="立即发送"),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="计划发送时间"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "等待中"),
                            ("sending", "发送中"),
                            ("sent", "已发送"),
                            ("failed", "发送失败"),
                            ("cancelled", "已取消"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="发送状态",
                    ),
                ),
                (
                    "total_recipients",
                    models.IntegerField(default=0, verbose_name="总接收者数"),
                ),
                (
                    "sent_count",
                    models.IntegerField(default=0, verbose_name="发送成功数"),
                ),
                (
                    "failed_count",
                    models.IntegerField(default=0, verbose_name="发送失败数"),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="发送时间"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="错误信息"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        related_name="push_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="接收者",
                    ),
                ),
            ],
            options={
                "verbose_name": "推送通知",
                "verbose_name_plural": "推送通知",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="APIRequestLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("method", models.CharField(max_length=10, verbose_name="HTTP方法")),
                ("endpoint", models.CharField(max_length=500, verbose_name="请求端点")),
                (
                    "query_params",
                    models.JSONField(default=dict, verbose_name="查询参数"),
                ),
                ("request_body", models.TextField(blank=True, verbose_name="请求体")),
                ("status_code", models.IntegerField(verbose_name="状态码")),
                ("response_time", models.FloatField(verbose_name="响应时间(毫秒)")),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP地址")),
                ("user_agent", models.TextField(blank=True, verbose_name="用户代理")),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="错误信息"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_requests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
                (
                    "token",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="request_logs",
                        to="api.apitoken",
                        verbose_name="API令牌",
                    ),
                ),
            ],
            options={
                "verbose_name": "API请求日志",
                "verbose_name_plural": "API请求日志",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "created_at"],
                        name="api_apirequ_user_id_a67e85_idx",
                    ),
                    models.Index(
                        fields=["token", "created_at"],
                        name="api_apirequ_token_i_39ea2b_idx",
                    ),
                    models.Index(
                        fields=["status_code", "created_at"],
                        name="api_apirequ_status__134a60_idx",
                    ),
                ],
            },
        ),
    ]
